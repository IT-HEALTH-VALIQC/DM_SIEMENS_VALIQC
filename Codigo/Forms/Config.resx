<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEcAAABCCAYAAAAFfcusAAAABGdBTUEAALGPC/xhBQAABGdJREFUeF7l
        XN1x00AQTgmUQAl0QDqADkIH4ZGJzZA3xsqD0wF0AB3YHTgdGMnM8Gg6CPudVrF0Wsm3Z0m+Nd/MN0SW
        Trrd25+7PYmrqfDp65/Xs0V+M3/YfZkvih/zrFjNs3xP/z4f6I7pdyKuoWs/Z7u3fIvLwuyheDfLim+k
        lG1TCXrOsnwzWxRLKJlvbw932e83UEjbKgblClZ4v9y/4semDXKBa3TaE2JkYgDyW+5CeoClUEcnVkqT
        zm0XxXvuUhpwwVXorJqL4olc8ed8kd+LzHaPdN2alPC31bbJ1dldrYwr+UboXBBLIUlgckW+ZTA46310
        yhTu7Vwt4r6DAOYbG2wp23wf0vxhJaWi8l/+s+6y4gNfNg3wQL8TgVyPnYLRt5aSyO359Lgo03PtwQF0
        nZ3YxJ0l1WITjvnUOOCA2BK+j3Ahbj45YKUI8lVfRnOxGFcafbQC4WJc1a+hLbgMvk3B++jMObH5xmFw
        8/1gaR43Umelc6XQI3hREC1m+afTQDdTzXpH8+uBUFPQaZaNmOEL38dzBl8NIBdxG+1eEe605qYmUC1T
        +FCHRoQPIJYS3NQE3OBTmldbj5sfCAroohV38oHEoY6RGqtB2o723QSAiS3/eRz/i9VUgLzBIaGsm8iK
        kGgt1kgIlgEpTlKCSApo3OzygQAlKqGLsanQItSr7kSXCaNA5VJEy1lKBW2WupR4gwHGbmrvjioWYqIS
        umlqueAD8rY3B/I9Kp0tj9CmcKJZ5Rwv9eb7Rnrv3uLooNFMhRW5KI/Hxqqdflj7F/TSoHIgrKrSUMmo
        rvYZVM6hVBpGWI9rKJ3so8U1VURcfS4bCif6qVjNJoJTlKOKOQhsrqEhRCsnNIpXxKTRNTQEtXLqE10c
        iBf5NBiMgQjLOczlMPGR3lSo03JxS68cL65iLgAFkJs1XhCC0lLfkzoGkkMVV3vldfUdosX4IoEEVirH
        fpUzGJICughP4WaXD22V0/rGgQraqQpKGtz08kECB78QgWTEzfrRKvwYhLrKGbo0wo2tZyvtxoEqS1md
        EQPqGk59VhwCVwcxGqDUs+KY7Sasu6zFH22sQamYm+rAVbQVH5oA+lsXvo/IUCfFVswaUbnnw6Sh3r09
        Na5Ws8zUF6Bs5bISJA61QVmNSKoKQhpuCd/Dk92pDlfSeKn5pPV1XGnZul2UwQfZFcW43iNun54Balci
        Yr3FzYdFvTNkSZtz1j6Ob++2OfqquzVaU33XxIAbYWAafQjgZOUIX0FkqlviDZ8eBW5yV36w3xA6jBPv
        t0n+DiXBkoaMR9XH+/6zQogYiX7yraaFC9JdOxdulPPbmJSJl4rIDZZO2dK9A4h+nTMmOpRpPuhVlhUE
        hmVJhHXExBKZu8ek1oQk4DVmnXJnJ+Ma/eAupQf4OHxd6PiYTFspPpyStG+OKYn0bEopPsoU7IpPurfI
        BMIioXAoPqmYMhQw0iRk9V8uQGFrP+OxW9Lv5cdjUMZgC8UgXF39AzfglBjad98bAAAAAElFTkSuQmCC
</value>
  </data>
</root>